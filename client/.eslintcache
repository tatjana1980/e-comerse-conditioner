[{"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\index.js":"1","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\App.js":"2","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\store\\DeviceStore.js":"3","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\store\\UserStore.js":"4","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\http\\userAPI.js":"5","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\AppRouter.js":"6","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\NavBar.js":"7","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\http\\index.js":"8","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\routes.js":"9","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\utils\\consts.js":"10","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\DevicePage.js":"11","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Auth.js":"12","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Shop.js":"13","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Basket.js":"14","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Admin.js":"15","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\Pages.js":"16","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\http\\deviceAPI.js":"17","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\DeviceList.js":"18","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\TypeBar.js":"19","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\BrandBar.js":"20","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\modals\\CreateType.js":"21","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\modals\\CreateBrand.js":"23","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\DeviceItem.js":"24","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\About.js":"25"},{"size":457,"mtime":1648889885682,"results":"26","hashOfConfig":"27"},{"size":894,"mtime":1649186798866,"results":"28","hashOfConfig":"27"},{"size":1363,"mtime":1649186913507,"results":"29","hashOfConfig":"27"},{"size":424,"mtime":1649185967895,"results":"30","hashOfConfig":"27"},{"size":715,"mtime":1648476250357,"results":"31","hashOfConfig":"27"},{"size":897,"mtime":1649184186758,"results":"32","hashOfConfig":"27"},{"size":2107,"mtime":1649271441714,"results":"33","hashOfConfig":"27"},{"size":428,"mtime":1648476250357,"results":"34","hashOfConfig":"27"},{"size":878,"mtime":1649184118464,"results":"35","hashOfConfig":"27"},{"size":268,"mtime":1649184777176,"results":"36","hashOfConfig":"27"},{"size":2521,"mtime":1648925937623,"results":"37","hashOfConfig":"27"},{"size":3224,"mtime":1649104878948,"results":"38","hashOfConfig":"27"},{"size":1587,"mtime":1649186918347,"results":"39","hashOfConfig":"27"},{"size":157,"mtime":1648476250357,"results":"40","hashOfConfig":"27"},{"size":1591,"mtime":1648476250357,"results":"41","hashOfConfig":"27"},{"size":831,"mtime":1648924543098,"results":"42","hashOfConfig":"27"},{"size":1034,"mtime":1648843566355,"results":"43","hashOfConfig":"27"},{"size":510,"mtime":1648922142551,"results":"44","hashOfConfig":"27"},{"size":806,"mtime":1648924452370,"results":"45","hashOfConfig":"27"},{"size":819,"mtime":1648924312613,"results":"46","hashOfConfig":"27"},{"size":1399,"mtime":1648476250356,"results":"47","hashOfConfig":"27"},{"size":6314,"mtime":1649100010078,"results":"48","hashOfConfig":"27"},{"size":1423,"mtime":1648841321912,"results":"49","hashOfConfig":"27"},{"size":1123,"mtime":1648924860418,"results":"50","hashOfConfig":"27"},{"size":9373,"mtime":1649271447637,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"gpslne",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\index.js",[],["113","114"],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\App.js",["115"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"./index\";\r\nimport {check} from \"./http/userAPI\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nconst App = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        check().then(data => {\r\n            user.setUser(true)\r\n            user.setIsAuth(false)\r\n        }).finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <Spinner animation={\"grow\"}/>\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <NavBar />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\store\\DeviceStore.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\store\\UserStore.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\http\\userAPI.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\AppRouter.js",["116"],"import React, {useContext} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {authRoutes, publicRoutes} from \"../routes\";\r\nimport {ABOUT_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst AppRouter = observer(() => {\r\n    const {user} = useContext(Context)\r\n\r\n    console.log(user)\r\n    return (\r\n        <Switch>\r\n            {user.isAuth && authRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {/* <Redirect to={ABOUT_ROUTE}/> */}\r\n            <Redirect to={SHOP_ROUTE}/>\r\n            \r\n        </Switch>\r\n    );\r\n});\r\n\r\nexport default AppRouter;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\NavBar.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\http\\index.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\routes.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\utils\\consts.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\DevicePage.js",["117","118","119"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        {/* <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.rating}\r\n                        </div> */}\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\r\n                    >\r\n                        <h3 className=\"ml-3\" style={{fontSize: 25}}>Цену уточняйте у продавца</h3>\r\n                        <h3 className=\"ml-3\" style={{fontSize: 25}}>+375 (152) 444-222</h3>\r\n                        {/* <h3>От: {device.price} руб.</h3> */}\r\n                        {/* <Button variant={\"outline-dark\"}>Добавить в корзину</Button> */}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Auth.js",["120"],"import React, {useContext, useState} from 'react';\r\nimport {Container, Form} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш email...\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш пароль...\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                        {isLogin ?\r\n                            <div>\r\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={\"outline-success\"}\r\n                            onClick={click}\r\n                        >\r\n                            {isLogin ? 'Войти' : 'Регистрация'}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Shop.js",["121","122"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 8).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar />\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Basket.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\Admin.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\Pages.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\http\\deviceAPI.js",["123"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\DeviceList.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\TypeBar.js",["124"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <ListGroup>\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer', backgroundColor:\"CadetBlue\"}}\r\n                    active={type.id === device.selectedType.id}\r\n                    onClick={() => device.setSelectedType(type)}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\BrandBar.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\modals\\CreateType.js",[],"D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\modals\\CreateDevice.js",["125","126","127"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                    />\r\n                    {/* <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость устройства\"\r\n                        type=\"number\"\r\n                    /> */}\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить характиристики \\ модели\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства \\ модели\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введите описание свойства \\ модели\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\modals\\CreateBrand.js",["128"],"import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {createBrand, createType} from \"../../http/deviceAPI\";\r\n\r\nconst CreateBrand = ({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('')\r\n            onHide()\r\n        })\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить бренд\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Введите название бренда\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\components\\DeviceItem.js",["129"],"import React from 'react';\r\nimport {Card, Col} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport star from '../assets/star.png'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {DEVICE_ROUTE} from \"../utils/consts\";\r\n\r\nconst DeviceItem = ({device}) => {\r\n    const history = useHistory()\r\n    return (\r\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\r\n            <Card style={{width: 150, cursor: 'pointer', backgroundColor:\"CadetBlue\"}}>\r\n                <Image width={150} height={150} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                {/* <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\r\n                    <div></div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                    <div>{device.rating}</div>\r\n                        <Image width={18} height={18} src={star}/>\r\n                    </div>\r\n                </div> */}\r\n                <div>{device.name}</div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default DeviceItem;\r\n","D:\\Work\\Algoritmika\\Final project\\Shop\\client\\src\\pages\\About.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":19,"column":8,"nodeType":"136","endLine":19,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":20},{"ruleId":"138","severity":1,"message":"142","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":15},{"ruleId":"138","severity":1,"message":"143","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":15},{"ruleId":"134","severity":1,"message":"144","line":12,"column":8,"nodeType":"136","endLine":12,"endColumn":10,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":26,"column":17,"nodeType":"140","messageId":"141","endLine":26,"endColumn":21},{"ruleId":"134","severity":1,"message":"147","line":23,"column":8,"nodeType":"136","endLine":23,"endColumn":10,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"147","line":30,"column":8,"nodeType":"136","endLine":30,"endColumn":65,"suggestions":"149"},{"ruleId":"138","severity":1,"message":"150","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"151","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":11},{"ruleId":"138","severity":1,"message":"152","line":5,"column":36,"nodeType":"140","messageId":"141","endLine":5,"endColumn":48},{"ruleId":"138","severity":1,"message":"153","line":11,"column":19,"nodeType":"140","messageId":"141","endLine":11,"endColumn":27},{"ruleId":"134","severity":1,"message":"147","line":18,"column":8,"nodeType":"136","endLine":18,"endColumn":10,"suggestions":"154"},{"ruleId":"138","severity":1,"message":"155","line":4,"column":22,"nodeType":"140","messageId":"141","endLine":4,"endColumn":32},{"ruleId":"138","severity":1,"message":"156","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-unused-vars","'ABOUT_ROUTE' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'bigStar' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["160"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["161"],["162"],"'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.","'setPrice' is assigned a value but never used.",["163"],"'createType' is defined but never used.","'star' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"168","fix":"172"},"Update the dependencies array to be: [user]",{"range":"173","text":"174"},"Update the dependencies array to be: [id]",{"range":"175","text":"176"},"Update the dependencies array to be: [device]",{"range":"177","text":"178"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"179","text":"180"},{"range":"181","text":"178"},[660,662],"[user]",[468,470],"[id]",[897,899],"[device]",[1136,1193],"[device.page, device.selectedType, device.selectedBrand, device]",[764,766]]